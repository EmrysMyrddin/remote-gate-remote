package views

type PasswordForgottenModel struct {
	FormModel
	EmailSent bool
}

type PasswordForgottenFormValues struct {
	Email string `form:"Email" tr:"Email" validate:"required,email"`
}

type ResetPasswordFormValues struct {
	Password string `form:"Password" tr:"Mot de passe"                 validate:"required,min=16"`
	Confirm  string `form:"Confirm"  tr:"Confirmation du mot de passe" validate:"required,eqfield=Password"`
}

templ PasswordForgottenPage(resetError string) {
	@html("Woody Wood Gate - Mot de passe oublié") {
		@PasswordForgottenForm(PasswordForgottenModel{
			FormModel: NewFormError(resetError),
		})
	}
}

templ PasswordForgottenForm(model PasswordForgottenModel) {
	@authForm("Mot de passe oublié", model.FormModel) {
		<p>
			Veuillez fournir l'adresse email associée à votre compte.
		</p>
		if model.EmailSent {
			<p class="text-green-500">Un email contenant un lien de réinitialisation vous a été envoyé.</p>
		} else {
			@field(FieldModel{FormModel: model.FormModel,
				Label: "Email", Name: "Email", Required: true,
			})
		}
		@button(templ.Attributes{"type": "submit"}) {
			Envoyer le lien de réinitialisation
		}
	}
}

templ ResetPasswordPage() {
	@html("Woody Wood Gate - Réinitialisation du mot de passe") {
		@ResetPasswordForm(NewFormModel(nil, nil))
	}
}

templ ResetPasswordForm(model FormModel) {
	@authForm("Réinitialisation du mot de passe", model) {
		@field(FieldModel{FormModel: model,
			Label: "Nouveau mot de passe", Name: "Password", Required: true, Type: "password",
		})
		@field(FieldModel{FormModel: model,
			Label: "Confirmer le mot de passe", Name: "Confirm", Required: true, Type: "password",
		})
		@button(templ.Attributes{"type": "submit"}) {
			Changer le mot de passe
		}
	}
}
